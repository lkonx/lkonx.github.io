<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>《写作这回事》摘抄与感悟</title>
    <link href="/2020/10/05/%E3%80%8A%E5%86%99%E4%BD%9C%E8%BF%99%E5%9B%9E%E4%BA%8B%E3%80%8B%E6%91%98%E6%8A%84%E4%B8%8E%E6%84%9F%E6%82%9F/"/>
    <url>/2020/10/05/%E3%80%8A%E5%86%99%E4%BD%9C%E8%BF%99%E5%9B%9E%E4%BA%8B%E3%80%8B%E6%91%98%E6%8A%84%E4%B8%8E%E6%84%9F%E6%82%9F/</url>
    
    <content type="html"><![CDATA[<h1 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h1><ul><li><p>”你写故事时，是在给自己讲故事，“ 他说，” 你修改时，主要工作就是拿掉不属于故事的内容“</p></li><li><p>我学到的最重要的一点就是，作家对角色的最初认识可能和读者一样是错误的。我紧接着又认识到，仅仅因为创作困难，不论是感情上的原因，还是因为想象力缺乏，就中途放弃一部作品，这样的做法不可取。人有时候就得硬着头皮上，哪怕力不从心，仿佛坐着铲屎，使不上劲。因为你干出来的活儿会可能还不错</p></li><li><p>开始是这样：把你的书桌摆到屋角，每次做下去开始写作时，都要提醒自己为什么不把书桌摆在房间正中。生活并非艺术创作的支撑，反之才对。</p></li><li><p>我的建议就是，你为了尽最大的能力写作，有必要建造自己的工具箱，然后增强肌肉力量，才有力气把箱子带在身边。你这样做，就不必在面对艰难任务时感到气馁，而是一把抓过适用的工具，立刻投入工作。</p></li><li><p>记住用词的第一条规矩是使用你想到的第一个词，只要这个词事宜并且生动即可。</p></li><li><p>界定对话做好的方式就是”某某说“。比如”他说“，”她说“，”比尔说“，”莫妮卡说“。</p></li><li><p>你也许已经可以把故事讲得很不错，相信读者看到”他说“就会知道他讲话的语气与动作——是慢是块，是愉快还是伤心。但你的读者也许还在沼泽里挣扎，甭管怎么说，扔给他一根绳索……但绝对没必要拿根九十英尺的钢索把他迎头打晕。</p></li><li><p>概括性句子打头，描述和支持性词句紧跟在后。这种结构要求作者必须理清思路，而且这种结构可以使作者避免游离主题</p></li><li><p>写小说越多，就越会发现，段落是自动形成的。你需要的正是这种效果。写作小说时，最好不必过多考虑何时另起一段。诀窍就是顺其自然</p></li><li><p>我坚持认为段落而非句子才是写作的基本单位——意思在段落中连贯起来，词语有了更多的意义，不再仅仅是单词。段落也体现了节奏的快慢。</p></li><li><p>你如果想成为作家，必须首先得做到两件事：多读，多写。据我所知别无捷径，哪个作家都干过这两件事。</p></li><li><p>糅和不同风格，是你形成个人风格之前的必经阶段，但杂糅不是凭空发生的。你必须广泛阅读。</p></li><li><p>天赋使得练习这回事完全失去了意义；你如果发现自己在做某件事上天赋异禀，会主动去做这件事（不管是什么事）</p></li><li><p>在我看来，短篇小说也罢长篇小说也罢，都是由三部分构成的：叙事，将故事从A点推至B点最终推至Z点，故事结束；描写，把读者带进现场；对话，通过具体言语赋予人物生命。</p></li><li><p>好描写始于所见清晰，终于落笔清晰，意象清新，词汇简单。</p></li><li><p>好小说的注重法则之一就是，你如果可以将某事表现出来，让读者看到，就绝不要明讲出来。</p></li><li><p>从问题主题思想开始写作，几乎注定写不出好小说。好小说总是从故事开始，发展出主题；从主题发展出而来的好故事很少。</p></li><li><p>你如果是为了快乐而做事，就可以永远做下去。</p></li></ul><h1 id="作者推荐书单"><a href="#作者推荐书单" class="headerlink" title="作者推荐书单"></a>作者推荐书单</h1><p>彼得•亚伯拉汉斯：《完美犯罪》</p><p>彼得•亚伯拉汉斯：《熄灯》</p><p>彼得•亚伯拉汉斯：《压降》（又译《窃子疑云》）</p><p>彼得•亚伯拉汉斯：《9号革命》</p><p>詹姆斯•阿奇：《家人亡故》</p><p>克斯滕•巴奇斯：《怪物狗的生活》</p><p>帕特•巴克：《新生》</p><p>帕特•巴克：《门上的眼睛》</p><p>帕特•巴克：《幽灵路》</p><p>理查德•博氏：《黑夜季节》</p><p>彼得•布朗纳：《入侵者》</p><p>保罗•博尔斯：《遮蔽的天空》</p><p>柯拉盖森•波尔：《玉米饼幕布》</p><p>比尔•布莱森：《林中散步》</p><p>克里斯多夫•巴克利：《感谢您吸烟》</p><p>雷蒙德•卡佛：《我打电话的地方》</p><p>迈克尔•查本：《狼人年轻时》</p><p>温莎•乔尔顿：《零纬度》</p><p>迈克尔•康纳利：《诗人》</p><p>约瑟夫•康拉德：《黑暗的心脏》</p><p>K.C. 康斯坦丁：《家庭观念》</p><p>唐•德里罗：《地下世界》</p><p>尼尔森•德米尔：《教堂》</p><p>尼尔森•德米尔：《黄金海岸》</p><p>查尔斯•狄更斯：《雾都孤儿》</p><p>斯蒂芬•道宾斯：《等闲杀戮》</p><p>斯蒂芬•道宾斯：《死女孩的教堂》</p><p>罗迪•道伊尔：《撞上门的女人》</p><p>斯丹利•埃尔金：《迪克•吉布森秀》</p><p>威廉•福克纳：《我弥留之际》</p><p>亚历克斯•嘉兰：《海滩》</p><p>伊丽莎白•乔治：《心怀鬼胎》</p><p>苔丝•格里森：《重力》</p><p>威廉•戈尔丁：《蝇王》</p><p>穆雷尔•格雷：《熔炉》</p><p>格雷厄姆•格林：《一支出卖的枪》</p><p>格雷厄姆•格林：《我们在哈瓦那的人》</p><p>大卫•哈尔伯斯坦姆：《五十年代》</p><p>彼得•哈米尔：《辛纳特拉何以重要》</p><p>托马斯•哈里斯：《汉尼拔》</p><p>肯特•哈鲁夫：《单声颂歌》</p><p>彼得•霍格：《冰雪迷案》</p><p>斯蒂芬•亨特：《白人坏小子》</p><p>大卫•伊格纳修斯：《开火伤人》</p><p>约翰•欧文：《寡居的一年》</p><p>格雷厄姆•乔伊斯：《牙齿仙子》</p><p>艾伦•贾德：《魔鬼的杰作》</p><p>罗杰•卡恩：《美梦成真》</p><p>玛丽•卡尔：《撒谎者俱乐部》</p><p>杰克•柯切姆：《生的权利》</p><p>塔碧莎•金：《幸存者》</p><p>塔碧莎•金：《水中天》（未出版）</p><p>芭芭拉•金索尔沃：《毒树圣经》</p><p>约翰•柯拉考尔：《挑战巅峰》</p><p>哈珀•李：《杀死一只知更鸟》</p><p>伯纳德•列夫科维奇：《我们的人》</p><p>本特利•利特尔：《被忽视的人》</p><p>诺尔曼•麦克利恩：《大河恋：作品集》</p><p>萨默塞特•毛姆：《月亮和六便士》</p><p>科马克•麦卡锡：《平原城市》</p><p>科马克•麦卡锡：《十字路口》</p><p>弗兰克•麦考特：《安吉拉的灰烬》</p><p>爱丽丝•麦克德莫特：《迷人比利》</p><p>杰克•麦克德维特：《远古海岸》</p><p>伊恩•麦克尤恩：《爱无可忍》</p><p>伊恩•麦克尤恩：《水泥花园》</p><p>拉里•麦克穆特里：《死人漫步》</p><p>拉里•麦克穆特里和戴安娜•奥萨纳：《契克和奈德》</p><p>沃特•米勒：《献给雷波维奇的圣歌》</p><p>乔伊丝•卡罗尔•欧茨：《行尸走肉》</p><p>蒂姆•奥布莱恩：《林中湖上》</p><p>斯图尔特•奥南：《超速女王》</p><p>迈克尔•翁达杰：《英国病人》</p><p>理查德•诺斯•帕特森：《无处安身》</p><p>理查德•普莱斯：《自由国度》</p><p>安妮•普劳克斯：《怀俄明故事集》</p><p>安妮•普劳克斯：《航运新闻》</p><p>安娜•昆德伦：《真理》</p><p>露丝•伦德尔：《见到你真好》</p><p>弗兰克•罗宾森：《等待》</p><p>J•K. 罗琳：《哈利•波特与密室》</p><p>J•K. 罗琳：《哈利•波特与阿兹卡班的囚徒》</p><p>J•K. 罗琳：《哈利•波特与魔法石》</p><p>理查德•鲁索：《莫霍克》</p><p>约翰•伯恩海姆•施瓦兹：《救赎之路》</p><p>维克兰•塞斯：《如意郎君》</p><p>欧文•肖：《幼狮》</p><p>理查德•斯罗特金：《弹坑》</p><p>蒂尼夏•史密斯：《魔术师》</p><p>斯科特•斯宾塞：《黑衣人》</p><p>华莱士•斯台戈纳：《乔•希尔》</p><p>多娜•塔特：《校园秘史》</p><p>安•泰勒：《补丁行星》</p><p>库尔特•冯内古特：《咒语》</p><p>伊夫林•沃：《故园风雨后》</p><p>唐纳德•韦斯特雷克：《斧》</p><h1 id="感悟"><a href="#感悟" class="headerlink" title="感悟"></a>感悟</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;作者以桌子上的一块红布与笼子里背上写着蓝色8的兔子把我拉到了1997年他的身边，我仿佛穿越了。这是我第一次感受到文字的奥妙与神奇之处，写作已经深深吸引住了我。读到后面关于禁止使用被动语态，激动的我写下了有史以来第一段感觉还不错的这段文字。我走到了河边，看！河上有一艘船，大概有一辆公交车那么大，船头站着一个和尚，手执一个发着绿光的魔法棒。</p><p>写作最重要的就是要对自己所写的东西自信并热爱它，能够让自己和读者带入其中，把每个角色变成鲜活的生命，要真实真诚。</p>]]></content>
    
    
    <categories>
      
      <category>读书</category>
      
      <category>写作</category>
      
    </categories>
    
    
    <tags>
      
      <tag>斯蒂芬·金</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL数据库基础</title>
    <link href="/2020/10/04/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/"/>
    <url>/2020/10/04/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h1 id="数据库增删改查"><a href="#数据库增删改查" class="headerlink" title="数据库增删改查"></a><strong>数据库增删改查</strong></h1><h2 id="新建数据库"><a href="#新建数据库" class="headerlink" title="新建数据库"></a><strong>新建数据库</strong></h2><pre><code>create database if not exists 数据库名称 charset=字符集;</code></pre><h2 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a><strong>删除数据库</strong></h2><pre><code>drop database if exists 数据库名称;</code></pre><h2 id="修改数据库"><a href="#修改数据库" class="headerlink" title="修改数据库"></a><strong>修改数据库</strong></h2><pre><code>alter database 数据库名称 charset=字符集;</code></pre><h2 id="查看数据库"><a href="#查看数据库" class="headerlink" title="查看数据库"></a><strong>查看数据库</strong></h2><pre><code>show create database 数据库名称;show databases;</code></pre><h1 id="表增删改查"><a href="#表增删改查" class="headerlink" title="表增删改查"></a><strong>表增删改查</strong></h1><p><strong>注意点:<br>在对数据库的表进行操作的时候(增删改查), 都必须先告诉MySQL我们要操作的是哪一个数据库</strong></p><pre><code>use 数据库名称;</code></pre><h2 id="查看数据库中有哪些表"><a href="#查看数据库中有哪些表" class="headerlink" title="查看数据库中有哪些表"></a><strong>查看数据库中有哪些表</strong></h2><pre><code>show tables;</code></pre><h2 id="查看指定表的结构"><a href="#查看指定表的结构" class="headerlink" title="查看指定表的结构"></a><strong>查看指定表的结构</strong></h2><pre><code>desc 表名;</code></pre><h2 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a><strong>创建表</strong></h2><pre><code>create table if not exists 表名(  字段名称 数据类型,  字段名称 数据类型,);</code></pre><p><strong>注意点: 以上代码创建表, 没有就会创建一个新的, 有就会自动跳过</strong></p><h2 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a><strong>删除表</strong></h2><pre><code>drop table if exists 表名;</code></pre><p><strong>注意点: 以上语句, 如果需要删除的表存在, 那么就直接删除, 如果不存在就跳过</strong></p><h2 id="修改表"><a href="#修改表" class="headerlink" title="修改表"></a><strong>修改表</strong></h2><h3 id="修改表名"><a href="#修改表名" class="headerlink" title="修改表名"></a><strong>修改表名</strong></h3><pre><code>rename table 原始名称 to 新的名称;</code></pre><h3 id="添加字段"><a href="#添加字段" class="headerlink" title="添加字段"></a><strong>添加字段</strong></h3><pre><code>alter table 表名 add 新增字段名称 新增字段数据类型;</code></pre><p><strong>注意点:</strong> </p><p><strong>默认情况下会将新增的字段放到原有字段的后面</strong></p><pre><code>alter table 表名 add 字段名 数据类型 first;</code></pre><p><strong>我们可以通过指定first将新增的字段放到原有字段的前面</strong></p><pre><code>alter table 表名 add 字段名 数据类型 after 字段名;</code></pre><p><strong>我们可以通过after指定将新增的字段放到哪个字段的后面</strong></p><h3 id="删除字段"><a href="#删除字段" class="headerlink" title="删除字段"></a><strong>删除字段</strong></h3><pre><code>alter table 表名 drop 字段名称;</code></pre><h3 id="修改字段"><a href="#修改字段" class="headerlink" title="修改字段"></a><strong>修改字段</strong></h3><h4 id="修改字段的数据类型"><a href="#修改字段的数据类型" class="headerlink" title="修改字段的数据类型"></a><strong>修改字段的数据类型</strong></h4><pre><code>alter table 表名 modify 需要修改的字段名称 新的数据类型</code></pre><h4 id="修改字段的名称和数据类型"><a href="#修改字段的名称和数据类型" class="headerlink" title="修改字段的名称和数据类型"></a><strong>修改字段的名称和数据类型</strong></h4><pre><code>alter table 表名 change 原始字段名称 新的字段名称 新的数据类型;</code></pre><h1 id="数据增删改查"><a href="#数据增删改查" class="headerlink" title="数据增删改查"></a><strong>数据增删改查</strong></h1><h2 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a><strong>插入数据</strong></h2><pre><code>insert into 表名 (字段名称1, 字段名称2) values (值1, 值2);</code></pre><p><strong>注意点:</strong> </p><p><strong>在插入数据的时候指定的字段名称的顺序不用和表中的字段名称的顺序一致<br>在插入数据的时候指定的取值顺序必须和指定的字段名称顺序一致<br>如果插入数据时指定的取值顺序和表中的字段顺序是一致的, 那么可以不指定字段名称</strong></p><pre><code> insert into  stu values (值1, 值2), (值1, 值2);</code></pre><p><strong>注意点: 我们可以通过values同时插入多条数据</strong></p><h2 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a><strong>更新数据</strong></h2><pre><code>update 表名 set 字段名称=值 [where 条件];</code></pre><p><strong>注意点:</strong></p><p><strong>如果在更新数据的时候没有指定条件, 那么就会更新整张表中的数据<br>如果在更新数据的时候指定了条件, 那么只会更新满足条件的数据<br>在指定条件的时候, 我们可以通过AND来指定多个条件, AND<br>在指定条件的时候, 我们可以通过OR来指定多个条件, OR<br>在更新数据的时候是可以同时更新多个字段的,字段之间用逗号隔开</strong></p><h2 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a><strong>查询数据</strong></h2><p><strong>注意点:</strong> </p><p><strong>以下方式会将表中所有的数据都查询出来, 所以性能比较差, 不能查询特定字段的值</strong></p><pre><code>select * from 表名;</code></pre><p><strong>以下才是查询数据完整的写法</strong></p><pre><code>select 字段名称1, 字段名称2 from 表名 where 条件;</code></pre><p><strong>查询特定字段的数据</strong></p><pre><code>select 字段名称1 from 表名;</code></pre><p><strong>where支持的运算符</strong></p><ul><li>=、!=、&lt;&gt;、&lt;、&lt;=、&gt;、&gt;=；</li><li>IN(X,Y)；固定的范围值</li><li>BETWEEN X AND Y；值在什么范围</li><li>IS NULL；（为空） </li><li>IS NOT NULL；（不为空）</li><li>AND；与</li><li>OR；或</li><li>NOT；非</li><li>LIKE: 模糊查询</li></ul><h2 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a><strong>删除数据</strong></h2><pre><code>delete from 表名 where 条件;</code></pre><p><strong>删除所有的数据</strong></p><pre><code>delete from 表名;</code></pre><h1 id="MySQL存储引擎"><a href="#MySQL存储引擎" class="headerlink" title="MySQL存储引擎"></a><strong>MySQL存储引擎</strong></h1><ul><li><h2 id="MySQL中的三种存储引擎"><a href="#MySQL中的三种存储引擎" class="headerlink" title="MySQL中的三种存储引擎"></a><strong>MySQL中的三种存储引擎</strong></h2><ul><li>MyISAM: 安全性低, 但不支持事务和外键, 适合频繁插入和查询的应用</li><li>InnoDB(默认): 安全性高, 支持事务和外键, 适合对安全性, 数据完整性要求较高的应用</li><li>Memory: 访问速度极快, 但不会永久存储数据, 适合对读写速度要求较高的应用</li></ul></li></ul><p>创建时指定存储引擎</p><pre><code>create table if not exists 表名(          字段名称 数据类型,          字段名称 数据类型,        )engine=引擎名称;</code></pre><h3 id="InnoDB"><a href="#InnoDB" class="headerlink" title="InnoDB"></a><strong>InnoDB</strong></h3><p>如果表的存储引擎是InnoDB, 那么只要创建表就会自动创建一个文件, 这个文件就保存了这张表的结构, 如果往InnoDB的表中存储数据, 那么数据会被存储到ibdata1的文件中, 如果存储的数据比较多, 那么系统会自动再创建ibdata2, ibdata3, …文件</p><h3 id="MyISAM"><a href="#MyISAM" class="headerlink" title="MyISAM"></a><strong>MyISAM</strong></h3><p>如果表的存储引擎是MyISAM, 那么只要创建表就会自动创建三个文件</p><ul><li>.sdi这个文件就保存了这张表的结构</li><li>.MYD这个文件就保存了这张表中存储的数据</li><li>.MYI这个文件就保存了这张表中的索引</li></ul><h3 id="Memory"><a href="#Memory" class="headerlink" title="Memory"></a><strong>Memory</strong></h3><p>如果表的存储引擎是Memory, 那么只要创建表就会自动创建一个文件,这个文件就保存了这张表的结构<br><strong>注意点: 如果表的存储引擎是Memory, 那么就不会像InnoDB/MyISAM将数据保存到文件中了, 而是直接保存到内存中</strong></p><h2 id="修改存储引擎"><a href="#修改存储引擎" class="headerlink" title="修改存储引擎"></a><strong>修改存储引擎</strong></h2><pre><code>alter table 表名 engine=引擎名称;</code></pre>]]></content>
    
    
    <categories>
      
      <category>数据库</category>
      
      <category>MySQL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
      <tag>基础</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
